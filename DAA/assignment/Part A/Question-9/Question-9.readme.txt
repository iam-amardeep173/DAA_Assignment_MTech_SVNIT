#############################################
System Reqruirements
    --> Compiler : g++ compiler
    --> Hardware : sufficient main memory
    --> OS       : Windows
#############################################

Program File : Question-9.cpp
How to run the program: Open Command Prompt/Powershell
                        Go to the folder using cd
                        Run the following command to compile the cpp file
Command to compile and run the program : Command to run program : g++ -o Question-9 Question-9.cpp&Question-9.exe

    1.# Sorting Algorithms Benchmark
	This C++ program implements various sorting algorithms and measures their execution times on random data. The program compares the performance of Bubble Sort, Insertion Sort, Merge Sort, a custom sorting algorithm, and Semi Bubble Sort.
	The README provides an overview of the program and explains the time complexity of each sorting algorithm.


    2. Asymptotic Analysis of Time Complexity
        Sorting Algorithms and Time Complexity

	| Algorithm         | Description                              | Time Complexity (Worst Case)  |
	| ----------------- | ---------------------------------------- | ----------------------------- |
	| Bubble Sort       | Simple comparison-based sorting algorithm| O(n^2)                        |
	| Insertion Sort    | Efficient for small datasets             | O(n^2)                        |
	| Merge Sort        | Divide and conquer algorithm             | O(n log n)                    |
	| Custom Sort       | Your custom sorting algorithm            | Specify if known              |
	| Semi Bubble Sort  | Variation of Bubble Sort                 | O(n^2)                        |

    3. Empirical Analysis of Time Complexity
        Generate the 1million data.... 
 
	Bubble Sort time = 0.000000 seconds  
	Check passed.

	Insertion Sort time = 4.1e-06 seconds
	Check passed.

	Merge Sort time = 3e-07 seconds      
	Check passed.

	My OwnSort time = 2.1e-06 seconds    
	Check passed.
        
    Merge sort and my own sort are the most efficient sorting algorithms in this comparison. 
   They have a time complexity of O(n log n), which is better than the O(n^2) time complexity of bubble sort, insertion sort, and semi bubble sort.